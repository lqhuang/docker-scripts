version: "3"

services:
  zookeeper:
    image: zookeeper:3.6.1
    restart: always
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    # Note: you cannot scale a service beyond 1 container if you have specified a custom name.
    # container_name: kafka
    restart: always
    ports:
      # - 9092
      - 9093
    environment:
      # HOSTNAME_COMMAND: docker info -f "{{ .Name }}"
      PORT_COMMAND: "docker port $$(hostname) 9093/tcp | cut -d: -f2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092,SSL://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092,SSL://${HOST_IP?}:_{PORT_COMMAND}
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_SSL_KEYSTORE_LOCATION: /kafka/kafka.keystore.jks
      KAFKA_SSL_KEYSTORE_TYPE: PKCS12
      KAFKA_SSL_KEYSTORE_PASSWORD: ${PASSWORD?}
      KAFKA_SSL_TRUSTSTORE_LOCATION: /kafka/kafka.truststore.jks
      KAFKA_SSL_TRUSTSTORE_TYPE: PKCS12
      KAFKA_SSL_TRUSTSTORE_PASSWORD: ${PASSWORD?}
      # KAFKA_SSL_KEY_PASSWORD: none
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_COMPRESSION_TYPE: lz4
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka.keystore.jks:/kafka/kafka.keystore.jks
      - ./kafka.truststore.jks:/kafka/kafka.truststore.jks
    env_file:
      - ./.env

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    restart: always
    ports:
      - 9001:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
